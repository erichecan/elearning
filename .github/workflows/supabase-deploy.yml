name: Deploy Supabase DB

on:
  push:
    paths:
      - 'supabase/migrations/**'
      - '.github/workflows/supabase-deploy.yml'
    branches:
      - main
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl bash wget postgresql-client
          
      - name: Install Supabase CLI
        run: |
          # Create directory for Supabase CLI
          mkdir -p $HOME/.supabase/bin
          
          # Download and install Supabase CLI
          curl -sL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz | tar -xz -C /tmp
          
          # Move the binary to the bin directory
          mv /tmp/supabase $HOME/.supabase/bin/supabase
          
          # Make it executable
          chmod +x $HOME/.supabase/bin/supabase
          
          # Add to PATH for this step
          echo "$HOME/.supabase/bin" >> $GITHUB_PATH
          
          # Verify installation
          $HOME/.supabase/bin/supabase --version

      - name: Deploy migrations using psql
        run: |
          # 使用psql直接执行迁移文件，强制IPv4连接
          export PGPASSWORD="${{ secrets.SUPABASE_DB_PASSWORD }}"
          
          # 强制使用IPv4解析
          echo "获取主机IP地址..."
          HOST_IP=$(getent ahostsv4 "${{ secrets.SUPABASE_DB_HOST }}" | head -n1 | awk '{print $1}')
          echo "主机IP: $HOST_IP"
          
          # 执行所有迁移文件
          for migration_file in supabase/migrations/*.sql; do
            if [ -f "$migration_file" ]; then
              echo "正在执行迁移文件: $migration_file"
              # 使用IP地址而不是主机名，强制IPv4连接
              psql -h "$HOST_IP" -U postgres -d postgres -p 5432 -f "$migration_file" --set ON_ERROR_STOP=1
              echo "迁移文件执行完成: $migration_file"
            fi
          done
          
          echo "所有迁移文件执行完成！"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }} 